[{"path":"index.html","id":"howdy","chapter":"Howdy","heading":"Howdy","text":"Howdy,website --less living results collaborative project four us. ultimate goal exhaustive resource environmental chemist. Rather, ’re focused developing broadly applicable data science course content (tutorials recipes) based R undergraduate environmental chemistry courses. Note none reviewed yet implemented capacity curriculum.","code":""},{"path":"index.html","id":"authors","chapter":"Howdy","heading":"Authors","text":"questions/comments/suggestions/concerns please email:Dave davidross.hall@mail.utoronto.caSteven steven.kutarna@mail.utoronto.caKristen kristen.yeh@mail.utoronto.caDr. D’eon jessica.deon@utoronto.ca","code":""},{"path":"introduction.html","id":"introduction","chapter":"1 Introduction","heading":"1 Introduction","text":"’ll learn (won’t learn)\nlearn = basic understanding R\nwon’t learn = L33T hax0r Skillz\nlearn = basic understanding Rwon’t learn = L33T hax0r SkillzHow book organized\ncode covered chunks monospaced (like )\ncode covered chunks monospaced (like )Prerequisite softwaregetting help","code":""},{"path":"introduction.html","id":"prerequisite-software","chapter":"1 Introduction","heading":"1.1 Prerequisite software","text":"order use book first need download install R computer. latest build May 2021 v4.1.0. Download appropriate version R Operating System .recommend using default settings installation (.e. just keep clicking “Next”). Note need shortcuts launching R, always using Rstudio run provided code.R installed computer, need download install RStudio. Download appropriate version RStudio Operating System hereAgain, just use default installation settings.","code":""},{"path":"introduction.html","id":"where-to-get-help","chapter":"1 Introduction","heading":"1.2 Where to get help","text":"’s often tempting contact TA Professor sign first trouble, ’s often better try resolve issues , especially ’re related technical issues R. Given popularity R, ’ve run issue, someone else … ’ve complained someone else solved ! often unappreciated aspect coding/data science knowing get help, search , translate someone’s solutions unique situation. Places get help include:Stack overflowUsing built-documentation (?help)reference book invaluable (R Data Science)[https://r4ds..co.nz/index.html], inspired entire project.else fails, holler TA/profs.","code":""},{"path":"running-r-code.html","id":"running-r-code","chapter":"2 Running R Code","heading":"2 Running R Code","text":"","code":""},{"path":"running-r-code.html","id":"navigating-rstudio","chapter":"2 Running R Code","heading":"2.1 Navigating RStudio","text":"Now R RStudio downloaded installed. open RStudio first time, see:RStudio default startup view.version R just installed appear main window, console, :Locating R version RStudio.(message appear, go Tools->Global Options make sure “R version” box set correct folder.)important aware version R using, especially using R packages may compatible outdated versions R (subsequent sections).Currently, RStudio interface three key regions, highlighted .Important regions RStudio interface.","code":""},{"path":"running-r-code.html","id":"console","chapter":"2 Running R Code","heading":"2.1.1 Console","text":"can run code directly typing R code console pane. console mainly used installing packages (later), can also used quick arithmetic. Try typing “2+2” console, hit Enter.console useful short--sweet commands, mainly using Scripts window run chunks code (see 2.2 run code RStudio).","code":"\n2+2## [1] 4"},{"path":"running-r-code.html","id":"environment","chapter":"2 Running R Code","heading":"2.1.2 Environment","text":"environment window lists variables, packages, functions run since opening RStudio. window particularly useful want view data format similar Excel spreadsheet directly RStudio, discuss Chapter 3 book.","code":""},{"path":"running-r-code.html","id":"viewer","chapter":"2 Running R Code","heading":"2.1.3 Viewer","text":"Viewer window couple useful tabs. mainly use export plots (later chapters), can also open code files “Files” tab without leave RStudio (expanded Chapter 3).","code":""},{"path":"running-r-code.html","id":"customizing-rstudio","chapter":"2 Running R Code","heading":"2.1.4 Customizing RStudio","text":"many us spend absurd amount time staring bright screens, may interested setting RStudio Dark Mode.can customize appearance RStudio interface clicking Tools->Global Options, RStudio->Preferences Mac, clicking “Appearance” left. Select preferred Editor Theme list.RStudio Appearance customization window.","code":""},{"path":"running-r-code.html","id":"where-to-run-code-in-rstudio","chapter":"2 Running R Code","heading":"2.2 Where to run code in RStudio","text":"Files R code called scripts, saved .R format. Let’s open new script RStudio going File->New File->R Script, clicking highlighted button image .Opening new script RStudio.open new window RStudio interface, shown following image.Scripts window RStudio.Whenever copy code blocks website (online sources), paste Scripts window. can run specific lines code highlighting pressing Ctrl+Enter (Cmd+Enter Mac), clicking “Run” button top right corner Scripts window.","code":""},{"path":"running-r-code.html","id":"scripts-vs.-console","chapter":"2 Running R Code","heading":"2.2.1 Scripts vs. console","text":"Using Scripts window write, edit, run code many advantages using console directly. Mainly, writing code scripts allows save code R file format, mentioned previously. means can open old files code easily run commands ’ve previously written.Additionally, Scripts window allows review edit code without risk accidentally running incomplete command. typing directly console, time hit Enter, R try execute line code entered, whether completed command. issue typing code Scripts window, code window executed “Run” button clicked, code highlighted pressed Ctrl+Enter (Cmd+Enter Mac).Scripts also useful coding repetitive tasks. Let’s say want run function 10 different data sets. console, write function 10 times, alter input data set time. Scripts window, can write function , copy-paste 9 times subsequent lines script. can use Find/Replace button, highlighted following image, adjust input data set call function. run code highlighting 10 lines , hitting Ctrl+Enter (Cmd+Enter Mac).Find replace button Scripts window RStudio.value typing code Scripts window hard articulate without getting examples coding language, come appreciate using scripts saving .R files become familiar coding RStudio interface.","code":""},{"path":"running-r-code.html","id":"coding-building-blocks","chapter":"2 Running R Code","heading":"2.3 Coding building blocks","text":"Now know navigate RStudio, different places can enter code, let’s learn basic coding building blocks.mentioned earlier, R can used calculator.","code":"\n(1000 * pi) / 2## [1] 1570.796\n(2 * 3) + (5 * 4)## [1] 26"},{"path":"running-r-code.html","id":"variable-assignment","chapter":"2 Running R Code","heading":"2.3.1 Variable assignment","text":"can assign outputs arithmetic variables using <-, shown . view contents variable, simply type assigned variable name press Enter. Note variable names case sensitive, variable named x type X console, R able print contents x.can also assign single values, character strings (text) logical statements (TRUE FALSE) variables using notation.examples assignment statements. cover assignments complex objects following sections subsequent chapters.","code":"\nx <- 10 / 2\nx## [1] 5\nfifty <- 50\nfifty## [1] 50\nhowdy <- \"Howdy world!\"\nhowdy## [1] \"Howdy world!\"\nt <- TRUE\nt## [1] TRUE"},{"path":"running-r-code.html","id":"naming-variables","chapter":"2 Running R Code","heading":"2.3.2 Naming variables","text":"previous section learned assign variables names choice. create variables , good idea review makes good variable name makes bad variable name, well forbidden names R.Variable names can consist letters, numbers, dots (.) /underlines (_). names must begin letter dot character, long followed number (.e., “.4five” valid name). Variable names begin number.Good names variables short, sweet, easy type also somewhat descriptive. example, let’s say air pollution data set. good name assign data set airPol air_pol, names tell us contained data set easy type. bad name data set airPollution_NOx_O3_June20_1968. name much descriptive previous names, take long time type, become bit nuisance type 10+ times refer data set single script.Forbidden variable names R words reserved functions coding purposes. include, limited , , else, , function, , , next, break, TRUE, FALSE, NULL, Inf, NA, NaN.","code":""},{"path":"running-r-code.html","id":"basic-data-structures","chapter":"2 Running R Code","heading":"2.3.3 Basic data structures","text":"R several data structures briefly introduced . many freely available resources online dive depth different data structures R. interested learning different structures, can check Data structures chapter Advanced R Hadley Wickham, one authors R Data Science referenced Introduction.Data structures R include vectors, lists, matrices, data frames. Vectors lists examples one dimensional data structures, matrices data frames examples two dimensional data structures.Vectors contain multiple elements type; either numeric, character (text), logical, integer. Vectors created using c(), short combine. examples vectors shown .Lists similar vectors one dimensional data structures contain multiple elements. However, lists can contain multiple elements different types, vectors contain single type data. can create lists using list(). examples lists shown . can use str() reveal different components list, detailed format simply type assigned name list.Matrices data frames two dimensional data structures, similar tables create Excel. Matrices created using matrix(), three internal arguments; data, ncol, nrow. example matrix shown .Data frames lists equal-length vectors. two dimensional data structures like matrices, data frames also share properties one dimensional lists. Data frames created using data.frame().","code":"\nnum <- c(1, 2, 3, 4, 5)\nnum## [1] 1 2 3 4 5\nchar <- c(\"blue\", \"green\", \"red\")\nchar## [1] \"blue\"  \"green\" \"red\"\nlog <- c(T, T, T, F, F, F)\nlog## [1]  TRUE  TRUE  TRUE FALSE FALSE FALSE\nhi <- list(\"Hello\", c(5,10,15,20), c(T, T, F))\nstr(hi)## List of 3\n##  $ : chr \"Hello\"\n##  $ : num [1:4] 5 10 15 20\n##  $ : logi [1:3] TRUE TRUE FALSE\nhi## [[1]]\n## [1] \"Hello\"\n## \n## [[2]]\n## [1]  5 10 15 20\n## \n## [[3]]\n## [1]  TRUE  TRUE FALSE\nmat <- matrix(data = c(3, 4, 1, 6, 2, 9), ncol = 3, nrow = 2)\nmat##      [,1] [,2] [,3]\n## [1,]    3    1    2\n## [2,]    4    6    9"},{"path":"running-r-code.html","id":"r-packages-and-functions","chapter":"2 Running R Code","heading":"2.3.4 R packages and functions","text":"many functions operations available base R, sometimes may need perform task base R functions cover. Fortunately, many R packages freely available online, suite functions capabilities. commonly used packages data visualization organization include ggplot2 dplyr. included tidyverse package, used subsequent chapters.order use R package, need install package R. Usually done console, using command install.packages(). load package R, using command library(). ggplot2 package installed loaded .need install package , need reload every time start new R session open new R project. expand R sessions R projects Chapter 3.Now installed loaded ggplot2, can use ggplot function visualize data. First, ’re going load readr package, use read_csv() function import ozone concentration data. use ggplot() geom_point() plot ozone concentration time scatter plot.","code":"\ninstall.packages(\"ggplot2\")\nlibrary(ggplot2)\n#load relevant packages\nlibrary(readr)\nlibrary(ggplot2)\n\n#import ozone data set\nozone <- read_csv(\"./data/Ozone_oxidationexp.csv\")\n\n#plot ozone concentration vs. time\nggplot(data = ozone, aes(x = Time, y = Concentration)) +\n  geom_point()"},{"path":"running-r-code.html","id":"script-formatting","chapter":"2 Running R Code","heading":"2.4 Script formatting","text":"now familiar open Scripts window, well advantages typing code window rather console directly. write first script, let’s review basic script formatting.enter code script, good practice fill first lines text comments indicate script’s title, author, creation last edit date. can create comment script typing # text. example given .script header, include packages need loaded script run. Including necessary packages top script allows , anyone share code , easily see packages need install. also means decide run entire script , necessary packages always loaded subsequent code requires packages work.first lines scripts look something like following.rest script dedicated executable code. good practice include text comments throughout script, different chunks code, remind different sections code (.e., #import packages example). also makes easy anyone share code understand ’re trying different sections within script.can also use headers sub-headers scripts using # ## text. Headings written single hashtag, followed space, shown . Subheadings written two hashtags, followed space, also shown .Headings subheadings picked RStudio displayed Document Outline box. can open Document Outline box clicking button highlighted image . Use headings allows easy navigation long scripts, can navigate sections using Document Outline box.open Document Outline box.","code":"\n#Title: Ozone time series script\n#Author: Georgia Green\n#Date: January 8, 2072\n#Title: Ozone time series script\n#Author: Georgia Green\n#Date: January 8, 2072\n\n#import packages\nlibrary(dplyr)\nlibrary(ggplot2)\n# Heading Text\n## Subheading Text"},{"path":"running-r-code.html","id":"script-diagnostics","chapter":"2 Running R Code","heading":"2.4.1 Script diagnostics","text":"Writing complex code Script window particularly advantageous writing directly console script editor highlight syntax errors code red squiggly line ‘x’ sidebar, shown . can hover ‘x’ see causing error.!(RStudio highlights syntax errors Scripts window.)[images/Rstudio_diagnostics.png]{width = 50%}","code":""},{"path":"running-r-code.html","id":"viewing-data-and-code-simultaneously","chapter":"2 Running R Code","heading":"2.5 Viewing data and code simultaneously","text":"get coding workflows, may want know view scripts data side--side. can open script, plot, data set new window clicking dragging tab RStudio (may compatible Mac), clicking button highlighted image .open R script/plot/data set new window.Now ’re familiar navigating RStudio basic coding building blocks, let’s move Chapter 3, ’ll review normal workflow R.","code":""},{"path":"r-workflows.html","id":"r-workflows","chapter":"3 R Workflows","heading":"3 R Workflows","text":"Just like ’s common workflow chemistry lab (pre-lab, collect reagents, conduct experiment, etc.) ’s workflow working R. means way work, ’s tried true serve well tackle coursework.","code":""},{"path":"r-workflows.html","id":"creating-an-rstudio-project","chapter":"3 R Workflows","heading":"3.1 Creating an RStudio Project","text":"open RStudio first time, see:RStudio Default ViewThe version R just installed appear main window :RStudio - R Version(message appear, go Tools->Global Options make sure “R version” box set correct folder.)anything else, let’s create R Project. establish default folder RStudio bundle together code files one place.\nGo File->New Project. Click New Directory, New Project. Next, ’ll asked choose subdirectory name location. name can whatever want, highly recommend create directory parent folder data. Click Create Project, now see chosen file path displayed bottom-right window:RStudio Project FolderYou now ready use R! ’re hurry, can skip straight Chapter 2: Organizing Data, recommend finish chapter familiarize RStudio’s layout.","code":""},{"path":"r-workflows.html","id":"navigating-rstudio-1","chapter":"3 R Workflows","heading":"3.2 Navigating RStudio","text":"RStudio 4 main windows, 3 currently visible. see fourth window, go File->New File->R Script. now able see 4 main windows:RStudio Quadrants","code":""},{"path":"r-workflows.html","id":"r-environment","chapter":"3 R Workflows","heading":"3.2.1 R Environment","text":"window least important purposes. brief, list variables, packages, functions run since opening RStudio.","code":""},{"path":"r-workflows.html","id":"viewer-1","chapter":"3 R Workflows","heading":"3.2.2 Viewer","text":"Viewer window couple useful tabs. mainly use export plots (later chapters), can also open code files “Files” tab without leave RStudio.","code":""},{"path":"r-workflows.html","id":"console-1","chapter":"3 R Workflows","heading":"3.2.3 Console","text":"can type run code directly, mainly using Scripts window run code (see ). primary use console installing packages (later). Another thing Console window useful quick arithmetic. Try typing “2+2” console, hit Enter.","code":"\n2+2## [1] 4"},{"path":"r-workflows.html","id":"scripts","chapter":"3 R Workflows","heading":"3.2.4 Scripts","text":"R code files called scripts, saved *.R files. Whenever copy code blocks website, paste Scripts window. can run specific lines highlighting pressing Ctrl+Enter (Cmd+Enter Mac), clicking “Run” button top right window.","code":""},{"path":"r-workflows.html","id":"dark-mode","chapter":"3 R Workflows","heading":"3.3 Dark Mode","text":"Lastly, may interested set RStudio Dark Mode. Simply go Tools->Global Options, click “Appearance” left. select preferred Editor Theme list. (personal preference “Tomorrow Night Bright”)RStudio Dark Themes","code":""},{"path":"using-r-markdown.html","id":"using-r-markdown","chapter":"4 Using R Markdown","heading":"4 Using R Markdown","text":"nutshell, R Markdown allows analyse data R write report place (document written R Markdown). loads benefits including increased reproducibility, streamlined thinking. flipping back forth coding writing figure ’s going . Let’s run simple code example:’ve done write snippet R code, ran , printed results (appear console). code isn’t anything special, can extend concept R markdown document contains data, figures plots generate throughout analysis R.Pretty neat, eh? might think , let’s imagine scenario ’ll encounter soon enough. ’re submit assignment, ’ve spent hours analyzing data beautifying plots. Everything good go notice last minute supposed subtract value x value y analysis. work Excel (tsk tsk), ’ll need find correct worksheet, apply changes, reformat plots, import word (assuming everything going well, never looming deadlines). Now work R markdown, go one .rmd document, briefly apply changes re-compile document.","code":"\n# Look at me go mom\nx <- 2+2\nx## [1] 4"},{"path":"using-r-markdown.html","id":"lets-dig-a-little-deeper","chapter":"4 Using R Markdown","heading":"4.1 Let’s dig a little deeper","text":"’ve done write snippet R code, ran , printed results (appear console). code isn’t anything special, can extend concept R markdown document contains data, figures plots generate throughout analysis R. example:Table 4.1: Example table airborne pollutant levels used Figure 1.\nFigure 4.1: Time series 2018 ambient atmospheric O3 NO2 concentrations (ppb) downtown Toronto\nPretty neat, eh? might think , let’s imagine scenario ’ll encounter soon enough. ’re submit assignment, ’ve spent hours analyzing data beautifying plots. Everything good go notice last minute supposed subtract value x value y analysis. work Excel (tsk tsk), ’ll need find correct worksheet, apply changes, reformat plots, import word (assuming everything going well, never looming deadlines). Now work R markdown, go one .rmd document, briefly apply changes re-compile document.","code":"\nlibrary(tidyverse) \nlibrary(knitr)\nairPol <- read_csv(\"./data/Toronto_60433_2018_Jan2to8.csv\",\n                   na = \"-999\")\nkable(airPol[1:5, ], \n      caption = \"Example table of airborne pollutant levels used for Figure 1.\")\nggplot(airPol, aes(date, concentration, colour = pollutant)) +\n  geom_line() +\n  theme_classic()"},{"path":"using-r-markdown.html","id":"how-do-i-get-started-with-r-markdown","chapter":"4 Using R Markdown","heading":"4.2 How do I get started with R markdown?","text":"’ve already guessed, R markdown documents use R easily written assembled R Studio IDE. done , download R comprehensive R archive network (CRAN), link : http://cran.utstat.utoronto.ca/, R Studio, link : https://rstudio.com/products/rstudio/download/). Follow listed instructions well way. can also see accompanying Working RStudio document Quercus additional top tips.setup R R Studio, ’ll need install rmarkdown tinytex packages. console, simply run following code:rmarkdown package ’ll use generate documents, tinytex package enables compiling documents PDFs. ’s lot going behind scenes, shouldn’t need worry .Now everything setup, can create first R Markdown document opening R Studio, selecting FILE -> NEW FILE -> Rmarkdown. dialog box appear asking basic input parameters R markdown document. Add title select PDF default output format (can always change later want). new file appear ’s already populated basic script illustrating key components R markdown document.","code":"\ninstall.packages(\"rmarkdown\") # downloaded from CRAN\n\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()  # install TinyTeX"},{"path":"using-r-markdown.html","id":"great-now-whats-going-on-with-this-r-markdown-document","chapter":"4 Using R Markdown","heading":"4.2.1 Great, now what’s going on with this R markdown document?","text":"first reaction opened newly created R markdown document probably doesn’t look anything like something ’d show TA. ’re right, ’re seeing plain text code needs compiled (called knit R Studio) create final document. Let’s break R markdown syntax means let’s knit document.create R markdown document like R Studio bunch example code already written. can compile document (see ) see looks like, let’s break primary components. top document ’ll see something looks like :section known preamble ’s specify document parameters. example can see document title “Untitled”, ’s written truly, 24th August, default output PDF document. can modify preamble suit needs. example, wanted change title write title: \"Title \" preamble. Note none R code, rather ’s YAML, syntax document’s metadata. Apart ’s shown shouldn’t need worry much, just remember indentation YAML matters.Reading default R markdown code, ’ll see different blocks text. R markdown anything write interpreted body text (.e .stuff want folks reading like ) knitted document. actually run R code ’ll need see next section.","code":"---\ntitle: \"Untitled\"\nauthor: \"Jean Guy Rubberboots\"\ndate: \"20/04/2021\"\noutput: pdf_document\n---"},{"path":"using-r-markdown.html","id":"how-to-run-r-code-in-r-markdown","chapter":"4 Using R Markdown","heading":"4.2.2 How to run R code in R Markdown","text":"’s two ways write R code markdown:Setup code chunk. Code chunks start three back-ticks like : ```{r}, r indicates ’re using R languauge. end code chunk using three backticks like ```.\nSpecify code chunks options curly braces. .e. ```{r, fig.height = 2} sets figure height 2 inches. See Code Chunk Options section details.\nSetup code chunk. Code chunks start three back-ticks like : ```{r}, r indicates ’re using R languauge. end code chunk using three backticks like ```.Specify code chunks options curly braces. .e. ```{r, fig.height = 2} sets figure height 2 inches. See Code Chunk Options section details.Inline code expression, starts `r ends ` body text.\nEarlier calculated x <- 2 + 2, can use inline expressions recall value (ex. found x 4)\nInline code expression, starts `r ends ` body text.Earlier calculated x <- 2 + 2, can use inline expressions recall value (ex. found x 4)screenshot document, one ’re reading, appeared R Studio shown Figure 2.actually run R code two options. first run individual chunks using Run current chunk button (See figure 2). great way tinker code compile document. second option compile entire document using Knit document button (see Figure 2). Knitting sequentially run code chunks, generate text, knit two together output PDF. ’ll basically save end. Note code chunks single markdown document work together like normal R script. assign value variable first chunk, can call variable second chunk; applies libraries. Also note every time compile markdown document, ’s done “fresh” R session. ’re calling variable exist working environment, isn’t explicitly created markdown document ’ll get error.document, one ’re reading, appeared RStudio; see final results scroll Figure 1. Note “knit” “run current chunk” buttons.","code":""},{"path":"using-r-markdown.html","id":"how-do-i-go-from-r-markdown-to-something-i-can-hand-in","chapter":"4 Using R Markdown","heading":"4.2.3 How do I go from R markdown to something I can hand-in","text":"create PDF hand ’ll need compile, knit, entire markdown document mentioned . knit (compile) R markdown script, simply click knit button R Studio (yellow box, Figure 2). can specify output like R Studio (hopefully) compile script.want test code chunks run, R Studio shows little green ‘play button’ top right every code chunk. ‘run current chunk’ button, clicking run code chunk output whatever final R markdown document. great way tweak figures codes avoids need compile entire document check managed change lines ‘black’ ‘blue’ plot.","code":""},{"path":"using-r-markdown.html","id":"so-now-what-do-i-do-with-r-markdown","chapter":"4 Using R Markdown","heading":"4.3 So now what do I do with R Markdown?","text":"science write !seriousness though, document meant introduce R markdown, make case use ENV 316 coursework. couple useful elements talked , wealth helpful resources formatting documents. Just remember keep simple, ’s need reinvent wheel. default R markdown outputs plenty fine us.","code":""},{"path":"using-r-markdown.html","id":"r-markdown-resources-and-further-reading","chapter":"4 Using R Markdown","heading":"4.3.1 R Markdown resources and further reading","text":"’s plethora helpful online resources help hone R markdown skills. ’ll list couple (titles links corresponding document):Chapter 2 R Markdown: Definitive Guide Xie, Allair & Grolemund (2020). simplest, comprehensive, guide learning R markdown ’s available freely online.R markdown cheat sheet, great resource common R markdown operations; keep hand quick referencing.Bookdown: Authoring Books Technical Documents R Markdown (2020) Yihui Xie. Explains bookdown package greatly expands capabilities R markdown. example, table contents document created bookdown.","code":""},{"path":"using-r-markdown.html","id":"r-code-chunk-options","chapter":"4 Using R Markdown","heading":"4.3.2 R code chunk options","text":"can specify number options individual R code chunk. include top code chunk. example following code tells markdown ’re running code written R, compile document code chunk evaluated, resulting figure caption “Caption”. list code chunk options shown :","code":"```{r, eval = FALSE, fig.cap = \"Some caption\"}\n\n# some code to generate a plot worth captioning. \n\n```"},{"path":"using-r-markdown.html","id":"inserting-images-into-markdown-documents","chapter":"4 Using R Markdown","heading":"4.3.3 Inserting images into markdown documents","text":"Images produced R code can easily inserted document. markdown code isn’t R code, paragraphs bodytext insert following code. Note compiling PDF, LaTeX call place image “optimal” location, might find image isn’t exactly though . quick google search can help problem.Note use image atributes, {width=50%, height=50%} end. ’ll adjust size image. dimensions can use include px, cm, mm, , inch, %.","code":"![Caption for the picture.](path/to/image.png){width=50%, height=50%}"},{"path":"using-r-markdown.html","id":"generating-tables","chapter":"4 Using R Markdown","heading":"4.3.4 Generating Tables","text":"’s multiple methods create tables R markdown. Assuming want display results calculated R code, can use kable() function. Please consult Chapter 10 R Markdown Cookbook additional support.Alternatively, want create simple tables manually use following code main body, outside R code chunk. can increase number rows/columns location horizontal lines. generate complex tables, see kable() function kableExtra package.","code":"Header 1 | Header 2| Header 3\n---------|---------|---------|\nRow 1    | Data    | Some other Data\nRow 2    | Data    | Some other Data\n---------|---------|---------|"},{"path":"using-r-markdown.html","id":"spellcheck-in-r-markdown","chapter":"4 Using R Markdown","heading":"4.3.5 Spellcheck in R Markdown","text":"writing R markdown document R studio, go Edit tab top window select Check Spelling. can also use F7 key shortcut. spell checker literally go every word thinks ’ve misspelled document. can add words spell checker’s utility grows use . Note spell check also check R code; wary changing words code chunks may get error line.","code":""},{"path":"using-r-markdown.html","id":"quick-reference-on-r-markdown-syntax","chapter":"4 Using R Markdown","heading":"4.3.6 Quick reference on R markdown syntax","text":"Inline formatting; used formatyour text.Numbered listsNormal lists\nLists\nListsBlock-level elements, .e. ’re section headersExample R markdown syntax used formatting shown :","code":"- **Inline formatting**; *which* is ~used~ to ^format^ `your text`.\n1. Numbered lists\n- Normal lists\n  - Lists\n  \n- **Block-level elements**, i.e. your section headers\n\n# Headers\n## Headers\n### Headers"},{"path":"intro-to-data-analysis.html","id":"intro-to-data-analysis","chapter":"5 Intro to Data Analysis","heading":"5 Intro to Data Analysis","text":"section teach use R meet data analysis needs using common workflow. Whether takes 10 minutes 10 hrs, ’ll use workflow every data analysis project. explicitly understanding workflow steps, execute R, ’ll capable expanding limited tools learned book number data analysis projects ’ll soon encounter.explicit workflow ’ll teaching originally described Wickham Grolemund, consists six key steps:Data science workflow describes Wickham Grolemund; image R Data Science, Wickham Grolemund (2021)Import first step consist getting data R. Seems obvious, correctly save time headaches line.Tidy refers organizing data tidy manner variable column, observation row. often least intuitive part working R, especially ’ve used Excel, ’s critical. don’t tidy data, ’ll fighting every step way.Transform anything data including mathematical operations narrowing set observations. ’s often first stage cycle ’ll need transform data manner obtain desired plot.Visualize plots/graphics ’ll generate R. Take advantage R plot often, ’s easiest way spot errors.Model extension mathematical operations help understand data. linear regressions needed calibration curve example model.Communicate final step share knowledge ’ve squeezed information original data.Transform, Visualize, Model cycle exists steps often feed one another. example, ’ll often transform data, make quick model, visualize see performs. times, ’ll visualize data see type model can explain , transformations necessary. beauty R (coding general). ’ve setup everything, steps fairly simple execute allowing quickly explore data number different angles. next section explore theory () behind steps, introduce tools can use better explore data.","code":""},{"path":"intro-to-data-analysis.html","id":"further-reading","chapter":"5 Intro to Data Analysis","heading":"5.1 Further Reading","text":"case hasn’t apparent enough, entire endeavour inspired R Data Science reference book Hadley Wickham Garrett Grolemund. Every step described explored detail book, can read freely online https://r4ds..co.nz/. strongly encourage read book supplement R data analysis skills.","code":""},{"path":"importing-data-into-r.html","id":"importing-data-into-r","chapter":"6 Importing data into R","heading":"6 Importing data into R","text":"Unlike Excel, can’t copy paste data R (RStudio). Instead need import data R can work . chapter discuss data stored, import R (accompanying nuances).","code":""},{"path":"importing-data-into-r.html","id":"how-data-is-stored","chapter":"6 Importing data into R","heading":"6.1 How data is stored","text":"myriad ways data stored, notably raw instrument often record results proprietary vendor format, data ’re likely encounter undergraduate lab form .csv comma-separated values file. name implies, values separated commas (go ahead open .csv file text editor observe ). Essentially can think line row commas separating values columns, exactly R Excel handle .csv files.","code":""},{"path":"importing-data-into-r.html","id":"read_csv","chapter":"6 Importing data into R","heading":"6.2 read_csv","text":"Importing .csv file R simply requires read.csv read_csv function tidyverse. first variable important ’s file path. Recall R, unless specified, uses relative referencing. example ’re importing ATR_plastics.csv data sub-folder project specifying \"data/ATR_plastics.csv\" assigning variable atr_plastics. Note inclusion file extension.benefit using read_csv prints column specifications column’s name (’ll reference code) column value type. Columns can different data types, data type must consistent within given column. columns specifications good way ensure R correctly reading data.can also quickly inspect either Environment pane RStudio quickly head() function. Note column specifications column name.Note first line ATR_plastics.csv interpreted columns names (headers) R. common practice, gives handle can manipulate data. intend R interpret first row headers can suppress additional argument col_names = FALSE.Note example since headers now considered data, entire column interpreted character values. happen single non-numeric character introduced column, beware typos recording data! wanted skip rows (.e. avoid blank rows top .csv), can use skip = n skip n rows:","code":"\natr_plastics <- read_csv(\"data/ATR_plastics.csv\")## \n## -- Column specification --------------------------------------------------------\n## cols(\n##   wavenumber = col_double(),\n##   EPDM = col_double(),\n##   Polystyrene = col_double(),\n##   Polyethylene = col_double(),\n##   `Sample: Shopping bag` = col_double()\n## )\nhead(atr_plastics)## # A tibble: 6 x 5\n##   wavenumber  EPDM Polystyrene Polyethylene `Sample: Shopping bag`\n##        <dbl> <dbl>       <dbl>        <dbl>                  <dbl>\n## 1       550. 0.212      0.0746     0.000873               115.    \n## 2       551. 0.212      0.0746     0.000834                 0.0238\n## 3       551. 0.213      0.0745     0.000819                 0.0239\n## 4       552. 0.213      0.0745     0.000825                 0.0239\n## 5       552. 0.214      0.0745     0.000868                 0.0240\n## 6       553. 0.214      0.0746     0.000949                 0.0240\nhead(read_csv(\"data/atr_plastics.csv\", col_names = FALSE))## \n## -- Column specification --------------------------------------------------------\n## cols(\n##   X1 = col_character(),\n##   X2 = col_character(),\n##   X3 = col_character(),\n##   X4 = col_character(),\n##   X5 = col_character()\n## )## # A tibble: 6 x 5\n##   X1         X2        X3          X4           X5                  \n##   <chr>      <chr>     <chr>       <chr>        <chr>               \n## 1 wavenumber EPDM      Polystyrene Polyethylene Sample: Shopping bag\n## 2 550.0952   0.2119556 0.07463058  0.000873196  115.079             \n## 3 550.5773   0.2124079 0.07455246  0.000834192  0.02382648          \n## 4 551.0594   0.2128818 0.07450471  0.000819447  0.02387163          \n## 5 551.5415   0.2133267 0.07449704  0.000825491  0.02391921          \n## 6 552.0236   0.2137241 0.07452058  0.000868397  0.02396947\nhead(read_csv(\"data/atr_plastics.csv\", col_names = FALSE, skip = 1))## \n## -- Column specification --------------------------------------------------------\n## cols(\n##   X1 = col_double(),\n##   X2 = col_double(),\n##   X3 = col_double(),\n##   X4 = col_double(),\n##   X5 = col_double()\n## )## # A tibble: 6 x 5\n##      X1    X2     X3       X4       X5\n##   <dbl> <dbl>  <dbl>    <dbl>    <dbl>\n## 1  550. 0.212 0.0746 0.000873 115.    \n## 2  551. 0.212 0.0746 0.000834   0.0238\n## 3  551. 0.213 0.0745 0.000819   0.0239\n## 4  552. 0.213 0.0745 0.000825   0.0239\n## 5  552. 0.214 0.0745 0.000868   0.0240\n## 6  553. 0.214 0.0746 0.000949   0.0240"},{"path":"importing-data-into-r.html","id":"tibbles-vs.-data-frames","chapter":"6 Importing data into R","heading":"6.2.1 Tibbles vs. data frames","text":"Quick eyes notice first line outputted # tibble: 6 x 5. tibbles variation data.frames introduced section one, built specifically tidyverse family packages. data.frames tibbles often interchangeable, ’s important aware difference case run rare conflict. situations can readily transform tibble data.frame coercion .data.frame() function, vice-versa as_tibble() function.","code":"\nclass(as.data.frame(atr_plastics))## [1] \"data.frame\""},{"path":"importing-data-into-r.html","id":"importing-other-data-types","chapter":"6 Importing data into R","heading":"6.3 Importing other data types","text":"functions import different types tabular data function like read_csv, read_tsv tab-separate value files (.tsv) read_excel read_xlsx readxl package import Excel files. Note Excel files probably formatted legibility (.e. merged columns), can lead errors importing R. plan importing Excel files, ’s probably best open Excel remove formatting, save .csv smoother importing R.","code":""},{"path":"importing-data-into-r.html","id":"saving-data","chapter":"6 Importing data into R","heading":"6.4 Saving data","text":"progress analysis may want save intermediate final datasets. readily accomplished using write.csv (base R) write_csv (tidyverse) functions. Similar rules apply used read_csv, now second argument specifies save location file name, first argument tibble/data.frame ’re saving. Note R create folder way, ’re saving sub-folder ’ll make sure exists create .benefit write_csv always save UTF-8 encoding ISO8601 time format. standardization makes easier share .csv files collaborators/.","code":"\nwrite_csv(atr_plastics, \"data/ATRSaveExample.csv\")"},{"path":"importing-data-into-r.html","id":"further-reading-1","chapter":"6 Importing data into R","heading":"6.5 Further Reading","text":"See Chapters 10 11 R Data Science details tibbles read_csv.","code":""}]
